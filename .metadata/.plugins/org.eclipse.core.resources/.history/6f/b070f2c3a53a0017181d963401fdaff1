package com.atguigu.cpes.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.atguigu.cpes.bean.Menu;
import com.atguigu.cpes.bean.Permission;
import com.atguigu.cpes.service.MenuService;
import com.atguigu.cpes.service.PermissionService;

@Controller
@RequestMapping("/permission")
public class PermissionController extends BaseController {

	@Autowired
	private MenuService menuService;
	@Autowired
	private PermissionService permissionService;
	
	@RequestMapping("/select")
	public String edit(Integer id,Model model){
		Permission permission = permissionService.queryById(id);
		model.addAttribute("permission", permission);
		return "permission/edit";
	}
	@RequestMapping("/add.do")
	public Object add(Permission  permission){
		Map<String, Object> resultMap = new HashMap<>();
		try {
			permissionService.addPermission(permission);
			success(true);
		} catch (Exception e) {
			// TODO: handle exception
			error("stupid");
		}
		return resultMap;
	}
	@ResponseBody
	@RequestMapping("/loadPermissions.do")
	public Object loadPermissions(){
		//查询菜单数据形成父子关系
		List<Permission> list = permissionService.queryAll();
		Map<Integer, Permission> map = new HashMap<>();
		for (Permission permission : list) {
			map.put(permission.getId(), permission);
		}
		List<Permission> permissionList = new ArrayList<>();
		for (Permission menu : permissionList) {
			Permission childpermission = menu;
			if(menu.getPid()==0){
				permissionList.add(menu);
			}else{
				Permission parentmennu = map.get(childpermission.getPid());
				parentmennu.getChildern().add(childpermission);
			}
		}
	     return permissionList;
	}
	@ResponseBody
	@RequestMapping("/loadMenus")
	public Object loadMenus() {
		
		Map<String, Object> resultMap = new HashMap<String, Object>();
		
		// 查询菜单数据,形成父子关系
		List<Menu> menus = menuService.queryAll();
		Map<Integer, Menu> menuMap = new HashMap<Integer, Menu>();
		for ( Menu menu : menus ) {
			menuMap.put(menu.getId(), menu);
		}
		List<Menu> menuList = new ArrayList<Menu>();
		for (Menu menu : menus) {
			// 子菜单
			Menu childmenu = menu;
			
			if ( menu.getPid() == 0 ) {
				menuList.add(menu);
			} else {
				// 父菜单
				Menu parentmenu = menuMap.get(childmenu.getPid());
				// 组合父菜单和子菜单的关系
				parentmenu.getChildren().add(childmenu);
			}
		}
		resultMap.put("success", true);
		resultMap.put("menus", menuList);
		return resultMap;
	}
	
	@RequestMapping("/tree")
	public String tree(){
	
		return "permission/tree";
	}
}
